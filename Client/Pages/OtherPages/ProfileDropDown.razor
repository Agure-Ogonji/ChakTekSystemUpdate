<div class="btn-group">
	<img src="@(ProfileImage == "" ? "../Images/ProfileDisplay/Africa4.jpg" : ProfileImage)" width="30" height="40" style="border-radius:50%; margin-right:5px;"/>
	<button type="button" class="btn btn-none border-0 dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">
		<span class="visually-hidden">Toogle Dropdown</span>
	</button>
	<ul class="dropdown-menu mt-2 border-0">
		<li>
			<div class="card">
				<div class="card-body">
					<ul class="list-group">
						<li class="list-group-item">
							<a class="text-primary fw-bold float-start text-decoration-none" style="font-family:Tahoma; cursor:pointer;">
								<i class="bi bi-person-gear"></i> Profile
							</a>
						</li>
					</ul>
				</div>
				<div class="card-footer">
					<button class="btn btn-danger btn-sm fw-bold w-160" @onclick="LogoutClicked">
						<i class="bi bi-box-arrow-left"></i>
						Logout
					</button>
				</div>
			</div>
		</li>
	</ul>

</div>

@code{
	public string ProfileImage { get; set; } = "";
	async Task LogoutClicked()
	{
		var logoutModel = new UserSession();
		var customAuthProvider = (CustomAuthenticationStateProvider)AuthStateProvider;
		await customAuthProvider.UpdateAuthenticationState(logoutModel);
		NavManager.NavigateTo("/identity/account/login", replace: true, forceLoad: true);
	}
}